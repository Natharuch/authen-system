{"ast":null,"code":"var _jsxFileName = \"D:\\\\auth-system\\\\client\\\\src\\\\components\\\\PhoneVerify.js\";\nimport React, { useState } from \"react\";\n// import React, { Component } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport speakeasy from \"speakeasy\";\nimport QRCode from \"qrcode\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [code, setCode] = useState(\"\");\nconst navigate = useNavigate();\nconst PhoneVerify = () => {\n  state = {\n    image: \"\",\n    secret: \"\",\n    validCode: \"\",\n    isCodeValid: null\n  };\n  const componentDidMount = () => {\n    // const secret = speakeasy.generateSecret({name: 'Adidas'});\n    const secret = {\n      ascii: \"?:SD%oDD<E!^q^1N):??&QkeqRkhkpt&\",\n      base32: \"H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\",\n      hex: \"3f3a5344256f44443c45215e715e314e293a3f3f26516b6571526b686b707426\",\n      otpauth_url: \"otpauth://totp/Adidas%Adidas?secret=H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\"\n    };\n    // console.log('SECRET -->', secret);\n\n    // Backup codes\n    const backupCodes = [];\n    const hashedBackupCodes = [];\n    // const randomCode = (Math.random() * 10000000000).toFixed();\n    // console.log('randomCode -->', randomCode);\n\n    for (let i = 0; i < 10; i++) {\n      const randomCode = (Math.random() * 10000000000).toFixed();\n      const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\n      backupCodes.push(randomCode);\n      hashedBackupCodes.push(encrypted);\n    }\n    console.log(\"backupCodes ----->\", backupCodes);\n    console.log(\"hashedBackupCodes ----->\", hashedBackupCodes);\n\n    // const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\n    // console.log('encrypted -->', encrypted)\n    // var bytes  = CryptoJS.AES.decrypt(encrypted, secret.base32);\n    // var originalText = bytes.toString(CryptoJS.enc.Utf8);\n    // console.log('originalText --->', originalText);\n\n    QRCode.toDataURL(secret.otpauth_url, (err, image_data) => {\n      this.setState({\n        image: image_data,\n        secret\n      });\n    });\n  };\n  getCode = () => {\n    const {\n      base32,\n      hex\n    } = this.state.secret;\n    const code = speakeasy.totp({\n      secret: hex,\n      encoding: \"hex\",\n      algorithm: \"sha1\"\n    });\n    this.setState({\n      validCode: code\n    });\n  };\n  verifyCode = () => {\n    const {\n      inputValue,\n      secret\n    } = this.state;\n    const {\n      base32,\n      hex\n    } = secret;\n    const isVerified = speakeasy.totp.verify({\n      secret: hex,\n      encoding: \"hex\",\n      token: inputValue,\n      window: 1\n    });\n    console.log(\"isVerified -->\", isVerified);\n    if (this.setState) {\n      ({\n        isCodeValid: isVerified\n      });\n      navigate(\"/dashboard\");\n    } else {\n      console.log(\"miss code\");\n    }\n  };\n\n  //   render() {\n  const {\n    image,\n    validCode,\n    isCodeValid\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${image}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Verify code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => this.setState({\n        inputValue: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.verifyCode,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), isCodeValid !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isCodeValid ? \"✅\" : \"❌\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 11\n  }, this);\n  s;\n  //   }\n};\n_c = PhoneVerify;\nrender( /*#__PURE__*/_jsxDEV(PhoneVerify, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 116,\n  columnNumber: 12\n}, this), document.getElementById(\"root\"));\nexport default PhoneVerify;\nvar _c;\n$RefreshReg$(_c, \"PhoneVerify\");","map":{"version":3,"names":["React","useState","useNavigate","render","speakeasy","QRCode","CryptoJS","jsxDEV","_jsxDEV","code","setCode","navigate","PhoneVerify","state","image","secret","validCode","isCodeValid","componentDidMount","ascii","base32","hex","otpauth_url","backupCodes","hashedBackupCodes","i","randomCode","Math","random","toFixed","encrypted","AES","encrypt","toString","push","console","log","toDataURL","err","image_data","setState","getCode","totp","encoding","algorithm","verifyCode","inputValue","isVerified","verify","token","window","children","src","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","onChange","e","target","value","onClick","s","_c","document","getElementById","$RefreshReg$"],"sources":["D:/auth-system/client/src/components/PhoneVerify.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport speakeasy from \"speakeasy\";\r\nimport QRCode from \"qrcode\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst [code, setCode] = useState(\"\");\r\nconst navigate = useNavigate();\r\n\r\n\r\nconst PhoneVerify = () => {\r\n    state = {\r\n        image: \"\",\r\n        secret: \"\",\r\n        validCode: \"\",\r\n        isCodeValid: null\r\n      };\r\n\r\n      const componentDidMount = () => {\r\n        // const secret = speakeasy.generateSecret({name: 'Adidas'});\r\n        const secret = {\r\n          ascii: \"?:SD%oDD<E!^q^1N):??&QkeqRkhkpt&\",\r\n          base32: \"H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\",\r\n          hex: \"3f3a5344256f44443c45215e715e314e293a3f3f26516b6571526b686b707426\",\r\n          otpauth_url:\r\n            \"otpauth://totp/Adidas%Adidas?secret=H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\"\r\n        };\r\n        // console.log('SECRET -->', secret);\r\n    \r\n        // Backup codes\r\n        const backupCodes = [];\r\n        const hashedBackupCodes = [];\r\n        // const randomCode = (Math.random() * 10000000000).toFixed();\r\n        // console.log('randomCode -->', randomCode);\r\n    \r\n        for (let i = 0; i < 10; i++) {\r\n          const randomCode = (Math.random() * 10000000000).toFixed();\r\n          const encrypted = CryptoJS.AES.encrypt(\r\n            randomCode,\r\n            secret.base32\r\n          ).toString();\r\n          backupCodes.push(randomCode);\r\n          hashedBackupCodes.push(encrypted);\r\n        }\r\n    \r\n        console.log(\"backupCodes ----->\", backupCodes);\r\n        console.log(\"hashedBackupCodes ----->\", hashedBackupCodes);\r\n    \r\n        // const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\r\n        // console.log('encrypted -->', encrypted)\r\n        // var bytes  = CryptoJS.AES.decrypt(encrypted, secret.base32);\r\n        // var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n        // console.log('originalText --->', originalText);\r\n    \r\n        QRCode.toDataURL(secret.otpauth_url, (err, image_data) => {\r\n          this.setState({ image: image_data, secret });\r\n        });\r\n      }\r\n    \r\n      getCode = () => {\r\n        const { base32, hex } = this.state.secret;\r\n        const code = speakeasy.totp({\r\n          secret: hex,\r\n          encoding: \"hex\",\r\n          algorithm: \"sha1\"\r\n        });\r\n    \r\n        this.setState({ validCode: code });\r\n      };\r\n    \r\n      verifyCode = () => {\r\n        const { inputValue, secret } = this.state;\r\n        const { base32, hex } = secret;\r\n        const isVerified = speakeasy.totp.verify({\r\n          secret: hex,\r\n          encoding: \"hex\",\r\n          token: inputValue,\r\n          window: 1\r\n        });\r\n    \r\n        console.log(\"isVerified -->\", isVerified);\r\n        if (this.setState){({ isCodeValid: isVerified })\r\n        navigate(\"/dashboard\")\r\n    } else { console.log(\"miss code\")}\r\n            \r\n      };\r\n    \r\n    //   render() {\r\n        const { image, validCode, isCodeValid } = this.state;\r\n        return (\r\n          <div>\r\n            <img src={`${image}`} />\r\n            {\r\n              // <div>\r\n              //   <h2>{validCode}</h2>\r\n              //   <button onClick={this.getCode}>Get valid code</button>\r\n              // </div>\r\n            }\r\n    \r\n            <div style={{ marginTop: 20 }}>Verify code</div>\r\n            <input\r\n              type=\"number\"\r\n              onChange={e => this.setState({ inputValue: e.target.value })}\r\n            />\r\n            <button onClick={this.verifyCode}>Verify</button>\r\n            {isCodeValid !== null && <div>{isCodeValid ? \"✅\" : \"❌\"}</div>}\r\n          </div>\r\n        );\r\n        s;\r\n    //   }\r\n    }\r\n    \r\n    render(<PhoneVerify />, document.getElementById(\"root\"));\r\n    \r\n\r\nexport default PhoneVerify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}