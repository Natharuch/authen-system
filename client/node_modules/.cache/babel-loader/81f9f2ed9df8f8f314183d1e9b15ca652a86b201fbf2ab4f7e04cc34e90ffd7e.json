{"ast":null,"code":"var _jsxFileName = \"D:\\\\auth-system\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//👇🏻 Generates the code to be sent via SMS\nconst generateCode = () => Math.random().toString(36).substring(2, 12);\nconst sendNovuNotification = async (recipient, verificationCode) => {\n  try {\n    let response = await novu.trigger(\"<NOTIFICATION_TEMPLATE_ID>\", {\n      to: {\n        subscriberId: recipient,\n        phone: recipient\n      },\n      payload: {\n        code: verificationCode\n      }\n    });\n    console.log(response);\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","generateCode","Math","random","toString","substring","sendNovuNotification","recipient","verificationCode","response","novu","trigger","to","subscriberId","phone","payload","code","console","log","err","error"],"sources":["D:/auth-system/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//👇🏻 Generates the code to be sent via SMS\nconst generateCode = () => Math.random().toString(36).substring(2, 12);\n\nconst sendNovuNotification = async (recipient, verificationCode) => {\n    try {\n        let response = await novu.trigger(\"<NOTIFICATION_TEMPLATE_ID>\", {\n            to: {\n                subscriberId: recipient,\n                phone: recipient,\n            },\n            payload: {\n                code: verificationCode,\n            },\n        });\n        console.log(response);\n    } catch (err) {\n        console.error(err);\n    }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAb,eAAe,EAAE;;AAEjB;AACA,MAAMc,YAAY,GAAGA,CAAA,KAAMC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;AAEtE,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,gBAAgB,KAAK;EAChE,IAAI;IACA,IAAIC,QAAQ,GAAG,MAAMC,IAAI,CAACC,OAAO,CAAC,4BAA4B,EAAE;MAC5DC,EAAE,EAAE;QACAC,YAAY,EAAEN,SAAS;QACvBO,KAAK,EAAEP;MACX,CAAC;MACDQ,OAAO,EAAE;QACLC,IAAI,EAAER;MACV;IACJ,CAAC,CAAC;IACFS,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;EACzB,CAAC,CAAC,OAAOU,GAAG,EAAE;IACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}