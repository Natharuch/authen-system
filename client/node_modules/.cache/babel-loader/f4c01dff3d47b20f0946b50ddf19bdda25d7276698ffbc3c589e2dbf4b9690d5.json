{"ast":null,"code":"var _jsxFileName = \"D:\\\\auth-system\\\\client\\\\src\\\\components\\\\PhoneVerify.js\";\n// import React, { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport speakeasy from \"speakeasy\";\nimport QRCode from \"qrcode\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PhoneVerify extends Component {\n  constructor() {\n    var _s = $RefreshSig$();\n    super(...arguments);\n    this.state = {\n      image: \"\",\n      secret: \"\",\n      validCode: \"\",\n      isCodeValid: null\n    };\n    this.getCode = () => {\n      const {\n        base32,\n        hex\n      } = this.state.secret;\n      const code = speakeasy.totp({\n        secret: hex,\n        encoding: \"hex\",\n        algorithm: \"sha1\"\n      });\n      this.setState({\n        validCode: code\n      });\n    };\n    this.verifyCode = _s(() => {\n      _s();\n      const {\n        inputValue,\n        secret\n      } = this.state;\n      const {\n        base32,\n        hex\n      } = secret;\n      const isVerified = speakeasy.totp.verify({\n        secret: hex,\n        encoding: \"hex\",\n        token: inputValue,\n        window: 1\n      });\n      const navigate = useNavigate();\n      console.log(\"isVerified -->\", isVerified);\n      if (this.setState) {\n        isCodeValid: isVerified;\n        navigate(\"/dashboard\");\n      } else {\n        console.log(\"miss code\");\n      }\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    });\n  }\n  componentDidMount() {\n    // const secret = speakeasy.generateSecret({name: 'Adidas'});\n    const secret = {\n      ascii: \"?:SD%oDD<E!^q^1N):??&QkeqRkhkpt&\",\n      base32: \"H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\",\n      hex: \"3f3a5344256f44443c45215e715e314e293a3f3f26516b6571526b686b707426\",\n      otpauth_url: \"otpauth://totp/Adidas%Adidas?secret=H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\"\n    };\n    // console.log('SECRET -->', secret);\n\n    // Backup codes\n    const backupCodes = [];\n    const hashedBackupCodes = [];\n    // const randomCode = (Math.random() * 10000000000).toFixed();\n    // console.log('randomCode -->', randomCode);\n\n    for (let i = 0; i < 10; i++) {\n      const randomCode = (Math.random() * 10000000000).toFixed();\n      const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\n      backupCodes.push(randomCode);\n      hashedBackupCodes.push(encrypted);\n    }\n    console.log(\"backupCodes ----->\", backupCodes);\n    console.log(\"hashedBackupCodes ----->\", hashedBackupCodes);\n\n    // const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\n    // console.log('encrypted -->', encrypted)\n    // var bytes  = CryptoJS.AES.decrypt(encrypted, secret.base32);\n    // var originalText = bytes.toString(CryptoJS.enc.Utf8);\n    // console.log('originalText --->', originalText);\n\n    QRCode.toDataURL(secret.otpauth_url, (err, image_data) => {\n      this.setState({\n        image: image_data,\n        secret\n      });\n    });\n  }\n  render() {\n    const {\n      image,\n      validCode,\n      isCodeValid\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${image}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: \"Verify code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => this.setState({\n          inputValue: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.verifyCode,\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), isCodeValid !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isCodeValid ? \"✅\" : \"❌\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n    //   s;\n  }\n}\n\nrender( /*#__PURE__*/_jsxDEV(PhoneVerify, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 10\n}, this), document.getElementById(\"root\"));\nexport default PhoneVerify;","map":{"version":3,"names":["React","Component","useNavigate","render","speakeasy","QRCode","CryptoJS","jsxDEV","_jsxDEV","PhoneVerify","constructor","_s","$RefreshSig$","arguments","state","image","secret","validCode","isCodeValid","getCode","base32","hex","code","totp","encoding","algorithm","setState","verifyCode","inputValue","isVerified","verify","token","window","navigate","console","log","componentDidMount","ascii","otpauth_url","backupCodes","hashedBackupCodes","i","randomCode","Math","random","toFixed","encrypted","AES","encrypt","toString","push","toDataURL","err","image_data","children","src","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","onChange","e","target","value","onClick","document","getElementById"],"sources":["D:/auth-system/client/src/components/PhoneVerify.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport speakeasy from \"speakeasy\";\r\nimport QRCode from \"qrcode\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\n\r\nclass PhoneVerify extends Component {\r\n    state = {\r\n      image: \"\",\r\n      secret: \"\",\r\n      validCode: \"\",\r\n      isCodeValid: null\r\n    };\r\n  \r\n    componentDidMount() {\r\n      // const secret = speakeasy.generateSecret({name: 'Adidas'});\r\n      const secret = {\r\n        ascii: \"?:SD%oDD<E!^q^1N):??&QkeqRkhkpt&\",\r\n        base32: \"H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\",\r\n        hex: \"3f3a5344256f44443c45215e715e314e293a3f3f26516b6571526b686b707426\",\r\n        otpauth_url:\r\n          \"otpauth://totp/Adidas%Adidas?secret=H45FGRBFN5CEIPCFEFPHCXRRJYUTUPZ7EZIWWZLRKJVWQ23QOQTA\"\r\n      };\r\n      // console.log('SECRET -->', secret);\r\n  \r\n      // Backup codes\r\n      const backupCodes = [];\r\n      const hashedBackupCodes = [];\r\n      // const randomCode = (Math.random() * 10000000000).toFixed();\r\n      // console.log('randomCode -->', randomCode);\r\n  \r\n      for (let i = 0; i < 10; i++) {\r\n        const randomCode = (Math.random() * 10000000000).toFixed();\r\n        const encrypted = CryptoJS.AES.encrypt(\r\n          randomCode,\r\n          secret.base32\r\n        ).toString();\r\n        backupCodes.push(randomCode);\r\n        hashedBackupCodes.push(encrypted);\r\n      }\r\n  \r\n      console.log(\"backupCodes ----->\", backupCodes);\r\n      console.log(\"hashedBackupCodes ----->\", hashedBackupCodes);\r\n  \r\n      // const encrypted = CryptoJS.AES.encrypt(randomCode, secret.base32).toString();\r\n      // console.log('encrypted -->', encrypted)\r\n      // var bytes  = CryptoJS.AES.decrypt(encrypted, secret.base32);\r\n      // var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n      // console.log('originalText --->', originalText);\r\n  \r\n      QRCode.toDataURL(secret.otpauth_url, (err, image_data) => {\r\n        this.setState({ image: image_data, secret });\r\n      });\r\n    }\r\n  \r\n    getCode = () => {\r\n      const { base32, hex } = this.state.secret;\r\n      const code = speakeasy.totp({\r\n        secret: hex,\r\n        encoding: \"hex\",\r\n        algorithm: \"sha1\"\r\n      });\r\n  \r\n      this.setState({ validCode: code });\r\n    };\r\n  \r\n    verifyCode = () => {\r\n      const { inputValue, secret } = this.state;\r\n      const { base32, hex } = secret;\r\n      const isVerified = speakeasy.totp.verify({\r\n        secret: hex,\r\n        encoding: \"hex\",\r\n        token: inputValue,\r\n        window: 1\r\n      });\r\n      \r\n      const navigate = useNavigate();\r\n      console.log(\"isVerified -->\", isVerified);\r\n      if (this.setState){isCodeValid: isVerified \r\n        navigate(\"/dashboard\")\r\n    } else { console.log(\"miss code\")}\r\n    };\r\n  \r\n    render() {\r\n      const { image, validCode, isCodeValid } = this.state;\r\n      return (\r\n        <div>\r\n          <img src={`${image}`} />\r\n          {\r\n            // <div>\r\n            //   <h2>{validCode}</h2>\r\n            //   <button onClick={this.getCode}>Get valid code</button>\r\n            // </div>\r\n          }\r\n  \r\n          <div style={{ marginTop: 20 }}>Verify code</div>\r\n          <input\r\n            type=\"number\"\r\n            onChange={e => this.setState({ inputValue: e.target.value })}\r\n          />\r\n          <button onClick={this.verifyCode}>Verify</button>\r\n          {isCodeValid !== null && <div>{isCodeValid ? \"✅\" : \"❌\"}</div>}\r\n        </div>\r\n      );\r\n    //   s;\r\n    }\r\n  }\r\n  \r\n  render(<PhoneVerify />, document.getElementById(\"root\"));\r\n\r\nexport default PhoneVerify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}