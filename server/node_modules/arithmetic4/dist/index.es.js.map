{"version":3,"file":"index.es.js","sources":["../node_modules/fonction/dist/index.es.js","../src/add/index.ts","../src/constants/index.ts","../src/utils/index.ts","../src/divide/index.ts","../src/multiply/index.ts","../src/subtract/index.ts"],"sourcesContent":["const e=e=>void 0===e,r=e=>\"symbol\"==typeof e,t=(r,o)=>e(o)?e=>t(e,r):r+o,o=Symbol(\"_\"),n=(e,r)=>{if(e===o)return r;throw Error(\"Placeholder is invalid Symbol\")},s=(t,o)=>e(o)?e=>s(t,e):r(t)?n(t,(e=>s(e,o))):t/o,i=(r,t)=>e(t)?e=>i(e,r):r*t,l=(t,o)=>e(o)?e=>l(t,e):r(t)?n(t,(e=>l(e,o))):t-o,c=t,y=(e,r)=>!!e&&!!r,p=(e,r)=>[...r,e],{hasOwnProperty:a}=Object.prototype,f=e=>\"number\"==typeof e,u=l,d=e=>f(e)?u(e,1):u(e,1n),b=s,m=e=>\"string\"==typeof e,v=(e,r)=>m(r)?r.endsWith(e):r=>v(e,r),h=()=>!1,A=e=>e.length,g=e=>Array.isArray(e)?A(e)?e.slice(0,1)[0]:void 0:e.slice(0,1),w=(e,r)=>e>r,j=(e,r)=>e>=r,C=(e,r)=>a.call(r,e),O=e=>\"bigint\"==typeof e,P=e=>\"boolean\"==typeof e,S=e=>null===e,W=e=>void 0===e,_=(e,r)=>!!e||!!r,x=e=>_(W(e),S(e)),E=e=>\"symbol\"==typeof e,L=e=>[x,P,f,m,O,E].some((r=>r(e))),U=e=>!L(e),k=e=>e.slice(1,1/0),q=(e,r)=>{const t=g(e);if(W(t))return!1;const o=k(e);return A(o)?!!y(C(t,r),U(r[t]))&&q(o,r[t]):C(t,r)},z=e=>e.slice(0,-1),B=e=>e,D=e=>f(e)?c(e,1):c(e,1n),F=e=>\"function\"==typeof e,G=e=>()=>e,H=e=>Array.isArray(e)?A(e)?e.slice(-1)[0]:void 0:e.slice(-1),I=e=>e.toLowerCase(),J=(e,r)=>e<r,K=(e,r)=>e<=r,M=i,N=(e,r)=>[e,...r],Q=e=>{const r=g(e);if(W(r))return 0;const t=f(r)?1:1n;return e.reduce(M,t)},R=e=>m(e)?e.split(\"\").reverse().join(\"\"):[...e].reverse(),T=(e,r)=>m(r)?r.startsWith(e):r=>T(e,r),V=e=>{const r=g(e);if(W(r))return 0;const t=f(r)?0:0n;return e.reduce(c,t)},X=()=>!0,Y=e=>e.trim(),Z=e=>e.toUpperCase(),$=(e,r)=>!e!=!r;export{h as F,G as K,X as T,o as _,c as add,y as and,p as append,d as dec,b as divide,v as endsWith,g as first,w as gt,j as gte,C as has,q as hasPath,z as head,B as identity,D as inc,O as isBigint,P as isBoolean,F as isFunction,x as isNill,S as isNull,f as isNumber,U as isObject,L as isPrimitive,m as isString,E as isSymbol,W as isUndefined,H as last,A as length,I as lowerCase,J as lt,K as lte,M as multiply,_ as or,N as prepend,Q as product,R as reverse,T as startsWith,u as subtract,V as sum,k as tail,Y as trim,Z as upperCase,$ as xor};\n//# sourceMappingURL=index.es.js.map\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isUndefined } from 'fonction'\n\nimport { Params } from '@/types'\n\n/**\n * Add first argument and second argument.\n *\n * @param a - The first input number\n * @param b - The second input number\n * @returns The result of `a + b`\n *\n * @example\n * ```ts\n * // Basic\n * add(1, 2) // 3\n * ```\n *\n * @example\n * ```ts\n * // Bigint\n * add(1n, 2n) //3n\n * ```\n *\n * @example\n * ```ts\n * // Curry\n * const plus2(2)\n * plus2(-3) // -1\n * ```\n *\n * @public\n */\nconst add: Params = (a: any, b?: any) => {\n  if (isUndefined(b)) return (_b: any) => add(_b, a)\n\n  return a + b\n}\n\nexport { add }\n","/**\n * Placeholder to indicate that the argument is not explicitly set.\n *\n * @returns The results of `Symbol('_')`\n *\n * @public\n */\nconst _ = Symbol('_')\nconst INVALID_PLACEHOLDER = 'Placeholder is invalid Symbol'\nexport { _, INVALID_PLACEHOLDER }\n","import type { AnyFn } from 'fonction'\n\nimport { _, INVALID_PLACEHOLDER } from '@/constants'\nconst isPlaceholder = <T extends unknown>(\n  val: T\n): T extends typeof _ ? true : false =>\n  (val === _) as T extends typeof _ ? true : false\n\nconst dealPlaceholder = (placeholder: symbol, fn: AnyFn): unknown => {\n  if (isPlaceholder(placeholder)) {\n    return fn\n  } else {\n    throw Error(INVALID_PLACEHOLDER)\n  }\n}\nexport { dealPlaceholder, isPlaceholder }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isSymbol, isUndefined } from 'fonction'\n\nimport { NonIdempotentParams } from '@/types'\nimport { dealPlaceholder } from '@/utils'\n\n/**\n * Divide its second argument from its first argument.\n *\n * @param a - The first input number\n * @param b - The second input number\n * @returns The result of `a / b`\n\n * @remarks\n * Since division is not idempotent, there are two ways to curry.\n *\n * @example\n * ```ts\n * // Number\n * divide(10, 100) // 0.1\n * ```\n *\n * @example\n * ```ts\n * // Bigint\n * divide(1n, 2n) // 3n\n * ```\n *\n * @example\n * ```ts\n * // First argument curry\n * const reciprocal = divide(1)\n * reciprocal(4) // 0.25\n * ```\n *\n * @example\n * ```ts\n * // Second argument curry\n * import { _ } from 'arithmetic4'\n * const half = divide(_, 2)\n * half(20) // 10\n * ```\n *\n * @public\n */\nconst divide: NonIdempotentParams = (a: any, b?: any) => {\n  if (isUndefined(b)) return (_b: any) => divide(a, _b)\n  else if (isSymbol(a)) {\n    return dealPlaceholder(a, (_a: any) => divide(_a, b))\n  }\n  return (a / b) as any\n}\nexport { divide }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isUndefined } from 'fonction'\n\nimport { Params } from '@/types'\n\n/**\n * Multiplies first argument and second argument.\n *\n * @param a - The first input number\n * @param b - The second input number\n * @returns The result of `a * b`\n *\n * @example\n * ```ts\n * // Basic\n * multiply(2, 3) // 6\n * ```\n *\n * @example\n * ```ts\n * // Bigint\n * multiply(2n, 3n) // 6n\n * ```\n *\n * @example\n * ```ts\n * // Curry\n * const double = multiply(2)\n * double(4) // 8\n * ```\n *\n * @public\n */\nconst multiply: Params = (a: any, b?: any) => {\n  if (isUndefined(b)) return (_b: any) => multiply(_b, a)\n\n  return (a * b) as any\n}\nexport { multiply }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isSymbol, isUndefined } from 'fonction'\n\nimport { NonIdempotentParams } from '@/types'\nimport { dealPlaceholder } from '@/utils'\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @param a - The first input number\n * @param b - The second input number\n * @returns The result of `a - b`\n *\n * @remarks\n * Since subtraction is not idempotent, there are two ways to curry.\n *\n * @example\n * ```ts\n * // Number\n * subtract(2, 1) // 1\n * ```\n *\n * @example\n * ```ts\n * // Bigint\n * subtract(3n, 2n) //1n\n * ```\n *\n * @example\n * ```ts\n * // First argument curry\n * const from5Minus = subtract(5)\n * from5Minus(10) // -5\n * ```\n *\n * @example\n * ```ts\n * // Second argument curry\n * import { _ } from 'arithmetic4'\n * const minus5 = (_, 5)\n * minus5(20) // 15\n * ```\n *\n * @public\n */\nconst subtract: NonIdempotentParams = (a: any, b?: any) => {\n  if (isUndefined(b)) return (_b: any) => subtract(a, _b)\n  else if (isSymbol(a)) {\n    return dealPlaceholder(a, (_a: any) => subtract(_a, b))\n  }\n\n  return (a - b) as any\n}\n\nexport { subtract }\n"],"names":["W","e","E","add","a","b","isUndefined","_b","_","Symbol","dealPlaceholder","placeholder","fn","Error","divide","isSymbol","_a","multiply","subtract"],"mappings":"AAAK,MAAqqBA,EAAEC,QAAG,IAASA,EAAsCC,EAAED,GAAG,iBAAiBA,ECiC9uBE,EAAc,CAACC,EAAQC,IACvBC,EAAYD,GAAYE,GAAYJ,EAAII,EAAIH,GAEzCA,EAAIC,EC7BPG,EAAIC,OAAO,KCCXC,EAAkB,CAACC,EAAqBC,KAC5C,GAAkBD,IAHTH,EAIP,OAAOI,EAEP,MAAMC,MDJkB,kCEqCtBC,EAA8B,CAACV,EAAQC,IACvCC,EAAYD,GAAYE,GAAYO,EAAOV,EAAGG,GACzCQ,EAASX,GACTM,EAAgBN,GAAIY,GAAYF,EAAOE,EAAIX,KAE5CD,EAAIC,ECjBRY,EAAmB,CAACb,EAAQC,IAC5BC,EAAYD,GAAYE,GAAYU,EAASV,EAAIH,GAE7CA,EAAIC,ECSRa,EAAgC,CAACd,EAAQC,IACzCC,EAAYD,GAAYE,GAAYW,EAASd,EAAGG,GAC3CQ,EAASX,GACTM,EAAgBN,GAAIY,GAAYE,EAASF,EAAIX,KAG9CD,EAAIC"}