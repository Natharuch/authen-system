/*! Copyright (c) 2021-present the Core-fn authors. All rights reserved. MIT license. */
import{curry as t}from"curry-rice";import{tryCatch as e}from"fonction";const r=t(((t,e,r)=>r.replace(t,e))),i=t(((t,e)=>e.startsWith(t))),o=t(((t,e)=>e.endsWith(t))),s=t=>t.trim(),c=t=>t.trimStart(),l=c,a=t=>t.trimEnd(),n=a,m=t=>t.toLowerCase(),p=t=>t.toUpperCase(),d=t(((t,r)=>e((()=>r.repeat(t)),""))),u=t(((t,e)=>e.match(t))),h=t(((t,e)=>e.charAt(t))),f=t=>t.length,g=t(((t,e)=>e.includes(t))),x=t(((t,e)=>e.map(t))),C=t(((t,e,r)=>r.slice(null!=t?t:0,e))),y=t(((t,e)=>t.test(e))),A=t(((t,e)=>t.exec(e))),W=t=>t.dotAll,b=t=>t.unicode,k=t=>t.ignoreCase,w=t=>t.flags,E=t=>t.global,I=t=>t.sticky,L=t=>t.multiline,S=t=>t.source,U=t=>t.lastIndex,j=t=>t.description;export{h as charAt,j as description,W as dotAll,o as endsWith,A as exec,w as flags,E as global,k as ignoreCase,g as includes,U as lastIndex,f as length,x as map,u as match,L as multiline,d as repeat,r as replace,C as slice,S as source,i as startsWith,I as sticky,y as test,m as toLowerCase,p as toUpperCase,s as trim,a as trimEnd,l as trimLeft,n as trimRight,c as trimStart,b as unicode};
//# sourceMappingURL=index.es.js.map
